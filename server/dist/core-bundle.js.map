{"version":3,"sources":["./node_modules/loglevel/lib/loglevel.js","./dev/Call.tsx","./dev/Dates.tsx","./dev/Equals.tsx","./dev/Facility.tsx","./dev/GymClock.tsx","./dev/Logger.tsx","./dev/LoggerClientWrap.tsx","./dev/Person.tsx","./dev/Queue.tsx","./dev/Signal.tsx","./dev/Types.tsx","./dev/UserFacilities.tsx","./dev/Whiteboard.tsx","webpack/bootstrap","./dev/EntryPoints.tsx"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAA0C;AAClD,QAAQ,oCAAO,UAAU;AAAA;AAAA;AAAA;AAAA,kGAAC;AAC1B,KAAK,MAAM,EAIN;AACL,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA,qEAAqE;AACrE,WAAW;AACX;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA,eAAe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAC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","file":"./core-bundle.js","sourcesContent":["/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","/*! Copyright TXPCo, 2020, 2021 */\r\n\r\nimport { IStreamable } from './Streamable';\r\n\r\n//==============================//\r\n// CallParticipation class\r\n//==============================//\r\nexport class CallParticipation implements IStreamable<CallParticipation> {\r\n   \r\n   private _id: any;\r\n   private _facilityId: string;\r\n   private _personId: string;\r\n   private _isCandidateLeader: boolean;\r\n   private _sessionId: string;\r\n   private _sessionSubId: string;\r\n   private _glareResolve: number;\r\n\r\n   static readonly __type = \"CallParticipation\";\r\n\r\n   /**\r\n    * Create a CallParticipation object\r\n    * @param _id - Mongo-DB assigned ID\r\n    * @param facilityId - ID for the facility hosting the call\r\n    * @param personId - iD for the call participant \r\n    * @param isCandidateLeader - true of the person is a possible call leader\r\n    * @param sessionId - iD for the call session (in case same person joins > once)\r\n    * @param sessionSubId - iD for the call session (in case same person joins > once from same browser)\r\n    * @param glareResolve - if provided, a number to use for the glareResolution test. By design, don't reset this \r\n    *    - same CallParticipation should keep the same glareResolve throughout its lifetime\r\n    */\r\n   constructor(_id: any=null,\r\n      facilityId: string,\r\n      personId: string,\r\n      isCandidateLeader: boolean,\r\n      sessionId: string,\r\n      sessionSubId: string,\r\n      glareResolve: number= Math.random()) {\r\n\r\n      this._id = _id;\r\n      this._facilityId = facilityId;\r\n      this._personId = personId;\r\n      this._isCandidateLeader = isCandidateLeader;\r\n      this._sessionId = sessionId;\r\n      this._sessionSubId = sessionSubId;\r\n      if (glareResolve)\r\n         this._glareResolve = glareResolve;\r\n      else\r\n         this._glareResolve = Math.random();\r\n   }\r\n\r\n   /**\r\n   * set of 'getters' for private variables\r\n   */\r\n   get id(): any {\r\n      return this._id;\r\n   }\r\n   get facilityId(): string {\r\n      return this._facilityId;\r\n   }\r\n   get personId(): string {\r\n      return this._personId;\r\n   }\r\n   get isCandidateLeader(): boolean {\r\n      return this._isCandidateLeader;\r\n   }\r\n   get sessionId(): string {\r\n      return this._sessionId;\r\n   }\r\n   get sessionSubId(): string {\r\n      return this._sessionSubId;\r\n   }\r\n   get glareResolve(): number {\r\n      return this._glareResolve;\r\n   }\r\n   get type(): string {\r\n      return CallParticipation.__type;\r\n   }\r\n\r\n   /**\r\n    * test for equality - checks all fields are the same. \r\n    * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n    * @param rhs - the object to compare this one to.  \r\n    */\r\n   equals(rhs: CallParticipation) : boolean{\r\n\r\n      return ((this._id === rhs._id) &&\r\n         (this._facilityId === rhs._facilityId) &&\r\n         (this._personId === rhs._personId) &&\r\n         (this._isCandidateLeader === rhs._isCandidateLeader) &&\r\n         (this._sessionId === rhs._sessionId) && \r\n         (this._sessionSubId === rhs._sessionSubId) &&\r\n         (this._glareResolve.toPrecision(10) === rhs._glareResolve.toPrecision(10)));\r\n   };\r\n\r\n   /**\r\n    * Method that serializes to JSON \r\n    */\r\n   toJSON(): Object {\r\n\r\n      return {\r\n         __type: CallParticipation.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _id: this._id,\r\n            _facilityId: this._facilityId,\r\n            _personId: this._personId,\r\n            _isCandidateLeader: this._isCandidateLeader,\r\n            _sessionId: this._sessionId,\r\n            _sessionSubId: this._sessionSubId,\r\n            _glareResolve: this._glareResolve\r\n         }\r\n      };\r\n   };\r\n\r\n   /**\r\n    * Method that can deserialize JSON into an instance \r\n    * @param data - the JSON data to revive from \r\n    */\r\n   static revive (data: any): CallParticipation{\r\n\r\n      // revive data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return CallParticipation.reviveDb(data.attributes);\r\n\r\n      return CallParticipation.reviveDb(data);\r\n   };\r\n\r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revive from \r\n   */\r\n   static reviveDb(data: any): CallParticipation {\r\n\r\n      return new CallParticipation (\r\n         data._id,\r\n         data._facilityId,\r\n         data._personId,\r\n         data._isCandidateLeader,\r\n         data._sessionId,\r\n         data._sessionSubId,\r\n         data._glareResolve);\r\n   };\r\n}\r\n\r\n//==============================//\r\n// CallOffer class\r\n//==============================//\r\nexport class CallOffer implements IStreamable<CallOffer>  {\r\n\r\n   private _id: any;\r\n   private _from: CallParticipation;\r\n   private _to: CallParticipation;\r\n   private _offer: any;\r\n\r\n   static readonly __type = \"CallOffer\";\r\n\r\n   /**\r\n    * Create a CallOffer object\r\n    * @param _id - Mongo-DB assigned ID\r\n    * @param from - CallParticipation\r\n    * @param to - CallParticipation\r\n    * @param offer - the WebRTC Offer \r\n    */\r\n   constructor(_id: any=null, from: CallParticipation, to: CallParticipation, offer: any) {\r\n\r\n      this._id = _id;\r\n      this._from = from;\r\n      this._to = to;\r\n      this._offer = offer;\r\n   }\r\n\r\n   /**\r\n   * set of 'getters' for private variables\r\n   */\r\n   get id(): any {\r\n      return this._id;\r\n   }\r\n   get from(): CallParticipation {\r\n      return this._from;\r\n   }\r\n   get to(): CallParticipation {\r\n      return this._to;\r\n   }\r\n   get offer(): any {\r\n      return this._offer;\r\n   }\r\n   get type(): string {\r\n      return CallOffer.__type;\r\n   }\r\n\r\n   /**\r\n    * test for equality - checks all fields are the same. \r\n    * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n    * @param rhs - the object to compare this one to.  \r\n    */\r\n   equals(rhs: CallOffer): boolean {\r\n\r\n      return ((this._id === rhs._id) &&\r\n         (this._from.equals(rhs._from)) &&\r\n         (this._to.equals(rhs._to)) &&\r\n         (this._offer === rhs._offer));\r\n   };\r\n\r\n   /**\r\n    * Method that serializes to JSON \r\n    */\r\n   toJSON(): Object {\r\n\r\n      return {\r\n         __type: CallOffer.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _id: this._id,\r\n            _from: this._from,\r\n            _to: this._to,\r\n            _offer: this._offer\r\n         }\r\n      };\r\n   };\r\n\r\n   /**\r\n    * Method that can deserialize JSON into an instance \r\n    * @param data - the JSON data to revive from \r\n    */\r\n   static revive(data: any): CallOffer {\r\n\r\n      // revive data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return CallOffer.reviveDb(data.attributes);\r\n\r\n      return CallOffer.reviveDb(data);\r\n   };\r\n\r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revive from \r\n   */\r\n   static reviveDb(data: any): CallOffer {\r\n\r\n      return new CallOffer(data._id,\r\n         CallParticipation.revive(data._from),\r\n         CallParticipation.revive(data._to),\r\n         data._offer);\r\n   };\r\n}\r\n\r\n//==============================//\r\n// CallAnswer class\r\n//==============================//\r\nexport class CallAnswer implements IStreamable<CallAnswer> {\r\n\r\n   private _id: any;\r\n   private _from: CallParticipation;\r\n   private _to: CallParticipation;\r\n   private _answer: any;\r\n\r\n   static readonly __type = \"CallAnswer\";\r\n\r\n   /**\r\n    * Create a CallOffer object\r\n    * @param _id - Mongo-DB assigned ID\r\n    * @param from - CallParticipation\r\n    * @param to - CallParticipation\r\n    * @param answer - the WebRTC Offer \r\n    */\r\n   constructor(_id: any=null, from: CallParticipation, to: CallParticipation, answer: any) {\r\n\r\n      this._id = _id;\r\n      this._from = from;\r\n      this._to = to;\r\n      this._answer = answer;\r\n   }\r\n\r\n   /**\r\n   * set of 'getters' for private variables\r\n   */\r\n   get id(): any {\r\n      return this._id;\r\n   }\r\n   get from(): CallParticipation {\r\n      return this._from;\r\n   }\r\n   get to(): CallParticipation {\r\n      return this._to;\r\n   }\r\n   get answer(): any {\r\n      return this._answer;\r\n   }\r\n   get type(): string {\r\n      return CallAnswer.__type;\r\n   }\r\n\r\n   /**\r\n    * test for equality - checks all fields are the same. \r\n    * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n    * @param rhs - the object to compare this one to.  \r\n    */\r\n   equals(rhs: CallAnswer): boolean {\r\n\r\n      return ((this._id === rhs._id) &&\r\n         (this._from.equals(rhs._from)) &&\r\n         (this._to.equals(rhs._to)) &&\r\n         (this._answer === rhs._answer));\r\n   };\r\n\r\n   /**\r\n    * Method that serializes to JSON \r\n    */\r\n   toJSON(): Object {\r\n\r\n      return {\r\n         __type: CallAnswer.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _id: this._id,\r\n            _from: this._from,\r\n            _to: this._to,\r\n            _answer: this._answer\r\n         }\r\n      };\r\n   };\r\n\r\n   /**\r\n    * Method that can deserialize JSON into an instance \r\n    * @param data - the JSON data to revive from \r\n    */\r\n   static revive(data: any): CallAnswer {\r\n\r\n      // revive data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return CallAnswer.reviveDb(data.attributes);\r\n\r\n      return CallAnswer.reviveDb(data);\r\n   };\r\n\r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revive from \r\n   */\r\n   static reviveDb(data: any): CallAnswer {\r\n\r\n      return new CallAnswer(data._id,\r\n         CallParticipation.revive(data._from),\r\n         CallParticipation.revive(data._to),\r\n         data._answer);\r\n   };\r\n}\r\n\r\n//==============================//\r\n// CallIceCandidate class\r\n//==============================//\r\nexport class CallIceCandidate implements IStreamable<CallIceCandidate>  {\r\n\r\n   private _id: any;\r\n   private _from: CallParticipation;\r\n   private _to: CallParticipation;\r\n   private _ice: any;\r\n   private _outbound: boolean;\r\n\r\n   static readonly __type = \"CallIceCandidate\";\r\n\r\n   /**\r\n    * Create a CallIceCandidate object\r\n    * @param _id - Mongo-DB assigned ID\r\n    * @param from - CallParticipation\r\n    * @param to - CallParticipation\r\n    * @param ice - the WebRTC ice, may be null\r\n    * @param outbound - TRUE if this is from an outbound (Offer) connection\r\n    */\r\n   constructor(_id: any = null, from: CallParticipation, to: CallParticipation, ice: any, outbound: boolean) {\r\n\r\n      this._id = _id;\r\n      this._from = from;\r\n      this._to = to;\r\n      this._ice = ice;\r\n      this._outbound = outbound;\r\n   }\r\n\r\n   /**\r\n   * set of 'getters' for private variables\r\n   */\r\n   get id(): any {\r\n      return this._id;\r\n   }\r\n   get from(): CallParticipation {\r\n      return this._from;\r\n   }\r\n   get to(): CallParticipation {\r\n      return this._to;\r\n   }\r\n   get ice(): any {\r\n      return this._ice;\r\n   }\r\n   get outbound(): boolean {\r\n      return this._outbound;\r\n   }   \r\n   get type(): string {\r\n      return CallIceCandidate.__type;\r\n   }\r\n\r\n   /**\r\n    * test for equality - checks all fields are the same. \r\n    * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n    * @param rhs - the object to compare this one to.  \r\n    */\r\n   equals(rhs: CallIceCandidate): boolean {\r\n\r\n      return ((this._id === rhs._id) &&\r\n         (this._from.equals(rhs._from)) &&\r\n         (this._to.equals(rhs._to)) &&\r\n         (this._ice === rhs._ice) &&\r\n         (this._outbound === rhs._outbound));\r\n   };\r\n\r\n   /**\r\n    * Method that serializes to JSON \r\n    */\r\n   toJSON () : any {\r\n\r\n      return {\r\n         __type: CallIceCandidate.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _id: this._id,\r\n            _from: this._from,\r\n            _to: this._to,\r\n            _ice: this._ice,\r\n            _outbound: this._outbound\r\n         }\r\n      };\r\n   };\r\n\r\n   /**\r\n    * Method that can deserialize JSON into an instance \r\n    * @param data - the JSON data to revive from \r\n    */\r\n   static revive(data: any): CallIceCandidate {\r\n\r\n      // revive data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return CallIceCandidate.reviveDb(data.attributes);\r\n\r\n      return CallIceCandidate.reviveDb(data);\r\n   };\r\n\r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revive from \r\n   */\r\n   static reviveDb(data: any): CallIceCandidate {\r\n\r\n      return new CallIceCandidate(data._id,\r\n         CallParticipation.revive(data._from),\r\n         CallParticipation.revive(data._to),\r\n         data._ice,\r\n         data._outbound); \r\n   };\r\n}\r\n\r\n//==============================//\r\n// CallLeaderResolve class - used to resolve who is the call leader. \r\n// Send random numbers to each other, highest wins. \r\n//==============================//\r\nexport class CallLeaderResolve implements IStreamable<CallLeaderResolve>  {\r\n\r\n   private _id: any; \r\n   private _glareDate: Date; \r\n   private _glareResolve: number; \r\n\r\n   static readonly __type = \"CallLeaderResolve\";\r\n\r\n   /**\r\n    * Create a CallLeaderResolve object\r\n    * @param glareDate - if provided, date the call leader logged in. By design, don't reset this\r\n    *    - same CallParticipation should keep the same glareDate throughout its lifetime\r\n    * @param glareResolve - if provided, a number to use for the glareResolution test. By design, don't reset this\r\n    *    - same CallParticipation should keep the same glareResolve throughout its lifetime\r\n    */\r\n   constructor (_id: any=null,\r\n      glareDate: Date = new Date(), glareResolve: number = Math.random()) {\r\n\r\n      this._id = _id;\r\n      this._glareDate = glareDate;\r\n      this._glareResolve = glareResolve;\r\n   }\r\n\r\n   /**\r\n   * set of 'getters' for private variables\r\n   */\r\n   get id(): string {\r\n      return this._id;\r\n   }\r\n   get type(): string {\r\n      return CallLeaderResolve.__type;\r\n   }\r\n\r\n   /**\r\n    * test for equality - checks all fields are the same. \r\n    * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n    * @param rhs - the object to compare this one to.  \r\n    */\r\n   equals(rhs: CallLeaderResolve) : boolean {\r\n\r\n      return ((this._id === rhs._id) &&\r\n         this._glareDate.getTime() === rhs._glareDate.getTime() &&\r\n         this._glareResolve.toPrecision(10) === rhs._glareResolve.toPrecision(10));\r\n   };\r\n\r\n   \r\n   /**\r\n    * test to see if this object wins the resolution\r\n    * @param rhs - the object to compare this one to.  \r\n    */\r\n   isWinnerVs(rhs: CallLeaderResolve): boolean {\r\n\r\n      // Use the date first - this means first person logged in is usually the winner\r\n      // else use the random value to do a lottery, lowest wins so directionality is the same\r\n      return ((this._glareDate.getTime() < rhs._glareDate.getTime()) || \r\n         ((this._glareDate.getTime() === rhs._glareDate.getTime()) && (this._glareResolve < rhs._glareResolve)));\r\n   };\r\n\r\n   /**\r\n    * Method that serializes to JSON \r\n    */\r\n   toJSON () : any {\r\n\r\n      return {\r\n         __type: CallLeaderResolve.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _id: this._id,\r\n            _glareDate: this._glareDate,\r\n            _glareResolve: this._glareResolve\r\n         }\r\n      };\r\n   };\r\n\r\n   /**\r\n    * Method that can deserialize JSON into an instance \r\n    * @param data - the JSON data to revive from \r\n    */\r\n   static revive(data: any): CallLeaderResolve {\r\n\r\n      // revive data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return CallLeaderResolve.reviveDb(data.attributes);\r\n\r\n      return CallLeaderResolve.reviveDb(data);\r\n   };\r\n\r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revive from \r\n   */\r\n   static reviveDb(data: any): CallLeaderResolve {\r\n\r\n      return new CallLeaderResolve(data._id, new Date(data._glareDate), Number (data._glareResolve));\r\n   };\r\n}\r\n\r\n//==============================//\r\n// CallKeepAlive class\r\n//==============================//\r\nexport class CallKeepAlive implements IStreamable<CallKeepAlive> {\r\n   private _id: string;\r\n\r\n   static readonly __type = \"CallKeepAlive\";\r\n\r\n   /**\r\n    * Create a CallKeepAlive object\r\n    */\r\n   constructor (_id: string) {\r\n\r\n      this._id = _id;\r\n   }\r\n\r\n   get type(): string {\r\n      return CallKeepAlive.__type;\r\n   }\r\n\r\n   /**\r\n    * test for equality - checks all fields are the same. \r\n    * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n    * @param rhs - the object to compare this one to.  \r\n    */\r\n   equals(rhs: CallKeepAlive) : boolean {\r\n\r\n      return ((this._id === rhs._id));\r\n   };\r\n\r\n   /**\r\n    * Method that serializes to JSON \r\n    */\r\n   toJSON () : any {\r\n\r\n      return {\r\n         __type: CallKeepAlive.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _id: this._id,\r\n         }\r\n      };\r\n   };\r\n\r\n   /**\r\n    * Method that can deserialize JSON into an instance \r\n    * @param data - the JSON data to revive from \r\n    */\r\n   static revive(data: any): CallKeepAlive {\r\n\r\n      // revive data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return CallKeepAlive.reviveDb(data.attributes);\r\n\r\n      return CallKeepAlive.reviveDb(data);\r\n   };\r\n\r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revive from \r\n   */\r\n   static reviveDb(data: any): CallKeepAlive {\r\n\r\n      return new CallKeepAlive(data._id);\r\n   };\r\n}\r\n","/*! Copyright TXPCo, 2020, 2021 */\r\n\r\nexport class DateWithDays {\r\n   private date: Date;\r\n\r\n   constructor();\r\n   constructor(value: number | string);\r\n   constructor(year: number, month: number, date?: number, hours?: number, minutes?: number, seconds?: number, ms?: number);\r\n   constructor(...args: any[]) {\r\n      if (args.length === 0) {\r\n         this.date = new Date();\r\n      }\r\n      else\r\n      if (args.length === 1) {\r\n         this.date = new Date(args[0]);\r\n      }\r\n      else {\r\n         this.date = new Date(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\r\n      }\r\n   }\r\n\r\n   /**\r\n    * Function returns the day of the week in a text format.\r\n    */\r\n   getWeekDay () : string {\r\n\r\n      //Create an array containing each day, starting with Sunday.\r\n      var weekdays = new Array(\r\n         \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"\r\n      );\r\n\r\n      //Use the getDay() method to get the day.\r\n      var day = this.date.getDay();\r\n      // Return the element that corresponds to that index.\r\n      return weekdays[day];\r\n   };\r\n}\r\n","/*! Copyright TXPCo, 2020, 2021 */\r\n\r\nexport function isEqual(value: any, other: any): boolean {\r\n\r\n   // Get the value type\r\n   var type = Object.prototype.toString.call(value);\r\n\r\n   // If the two objects are not the same type, return false\r\n   if (type !== Object.prototype.toString.call(other))\r\n      return false;\r\n\r\n   // If items are not an object or array, return false\r\n   if (['[object Array]', '[object Object]'].indexOf(type) < 0)\r\n      return false;\r\n\r\n   // Compare the length of the length of the two items\r\n   var valueLen = type === '[object Array]' ? value.length : Object.keys(value).length;\r\n   var otherLen = type === '[object Array]' ? other.length : Object.keys(other).length;\r\n   if (valueLen !== otherLen)\r\n      return false;\r\n\r\n   // Compare two items\r\n   var compare = function (item1, item2) {\r\n\r\n      // Get the object type\r\n      var itemType = Object.prototype.toString.call(item1);\r\n\r\n      // If an object or array, compare recursively\r\n      if (['[object Array]', '[object Object]'].indexOf(itemType) >= 0) {\r\n         if (!isEqual(item1, item2))\r\n            return false;\r\n      }\r\n\r\n      // Otherwise, do a simple comparison\r\n      else {\r\n\r\n         // If the two items are not the same type, return false\r\n         if (itemType !== Object.prototype.toString.call(item2))\r\n            return false;\r\n\r\n         // Else if it's a function, convert to a string and compare\r\n         // Otherwise, just compare\r\n         if (itemType === '[object Function]') {\r\n            if (item1.toString() !== item2.toString())\r\n               return false;\r\n         } else {\r\n            if (item1 !== item2)\r\n               return false;\r\n         }\r\n\r\n      }\r\n   };\r\n\r\n   // Compare properties\r\n   if (type === '[object Array]') {\r\n      for (var i = 0; i < valueLen; i++) {\r\n         if (compare(value[i], other[i]) === false) return false;\r\n      }\r\n   } else {\r\n      for (var key in value) {\r\n         if (value.hasOwnProperty(key)) {\r\n            if (compare(value[key], other[key]) === false) return false;\r\n         }\r\n      }\r\n   }\r\n\r\n   // If nothing failed, return true\r\n   return true;\r\n};\r\n","/*! Copyright TXPCo, 2020, 2021 */\r\n\r\nimport { IStreamable } from './Streamable';\r\n\r\nexport class Facility implements IStreamable<Facility>  {\r\n   private _id: any;\r\n   private _externalId: string;\r\n   private _name: string;\r\n   private _thumbnailUrl: string;\r\n   private _homepageUrl: string;\r\n\r\n   static readonly __type: string = \"Facility\";\r\n\r\n   /**\r\n    * Create a Person object\r\n    * @param _id - Mongo-DB assigned ID\r\n    * @param externalId - ID assigned by external system (like facebook)\r\n    * @param name - plain text user name\r\n    * @param thumbnailUrl - URL to thumbnail image\r\n    * @param lastAuthCode - provided by underlying identity system when user logs in\r\n    */\r\n   constructor(_id: any, externalId: string, name: string, thumbnailUrl: string, homepageUrl: string) {\r\n      this._id = _id;\r\n      this._externalId = externalId;\r\n      this._name = name;\r\n      this._thumbnailUrl = thumbnailUrl;\r\n      this._homepageUrl = homepageUrl;\r\n   }\r\n\r\n   /**\r\n   * set of 'getters' for private variables\r\n   */\r\n   get id(): any {\r\n      return this._id;\r\n   }\r\n   get externalId(): string {\r\n      return this._externalId;\r\n   }\r\n   get name(): string {\r\n      return this._name;\r\n   }\r\n   get thumbnailUrl(): string {\r\n      return this._thumbnailUrl;\r\n   }\r\n   get homepageUrl(): string {\r\n      return this._homepageUrl;\r\n   }\r\n   get type(): string {\r\n      return Facility.__type;\r\n   }\r\n\r\n   /**\r\n    * test for equality - checks all fields are the same. \r\n    * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n    * @param rhs - the object to compare this one to.  \r\n    */\r\n   equals(rhs: Facility): boolean {\r\n\r\n      return ((this._id === rhs._id) &&\r\n         (this._externalId === rhs._externalId) &&\r\n         (this._name === rhs._name) &&\r\n         (this._thumbnailUrl === rhs._thumbnailUrl) &&\r\n         (this._homepageUrl === rhs._homepageUrl));\r\n   };\r\n\r\n   /**\r\n    * Method that serializes to JSON \r\n    */\r\n   toJSON(): Object {\r\n\r\n      return {\r\n         __type: Facility.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _id: this._id,\r\n            _externalId: this._externalId,\r\n            _name: this._name,\r\n            _thumbnailUrl: this._thumbnailUrl,\r\n            _homepageUrl: this._homepageUrl\r\n         }\r\n      };\r\n   };\r\n\r\n   /**\r\n    * Method that can deserialize JSON into an instance \r\n    * @param data - the JSON data to revove from \r\n    */\r\n   static revive(data: any): Facility {\r\n\r\n      // revice data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return Facility.reviveDb(data.attributes);\r\n      else\r\n         return Facility.reviveDb(data);\r\n   };\r\n\r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revove from \r\n   */\r\n   static reviveDb(data: any): Facility {\r\n\r\n      return new Facility(data._id,\r\n         data._externalId,\r\n         data._name,\r\n         data._thumbnailUrl,\r\n         data._homepageUrl);\r\n   };\r\n};\r\n\r\n","/*! Copyright TXPCo, 2020, 2021 */\r\n// GymClock spec is a 'templae' for a clock - how log, wether to play music, and which music. \r\n// GymClockAction is a way to send the start, pause, stop list via Rpc\r\n// GymClockState is a class to represent the state of a running clock - is is started, stopped, paused etc, and if running, for how long. \r\n// GymClock is a running clock - created from a spec, then can start, stop, pause etc. \r\n\r\nimport { IStreamable } from './Streamable';\r\n\r\nexport enum GymClockDurationEnum { 'Five', 'Ten', 'Fifteen', 'Twenty' };\r\nexport enum GymClockMusicEnum { 'Uptempo', 'Midtempo', 'None' };\r\nexport enum GymClockStateEnum { 'Stopped', 'CountingDown', 'Running', 'Paused' };\r\nexport enum GymClockActionEnum { 'Start', 'Stop', 'Pause' };\r\n\r\nconst countDownSeconds: number = 15;\r\n\r\n// Keep this function  declation up here in case an extra Enum is added above & this needs to change\r\nfunction calculateCountToSeconds (durationEnum) {\r\n   switch (durationEnum) {\r\n      case GymClockDurationEnum.Five:\r\n         return (countDownSeconds + 5 * 60);\r\n\r\n      default:\r\n      case GymClockDurationEnum.Ten:\r\n         return (countDownSeconds + 10 * 60);\r\n\r\n      case GymClockDurationEnum.Fifteen:\r\n         return (countDownSeconds + 15 * 60);\r\n\r\n      case GymClockDurationEnum.Twenty:\r\n         return (countDownSeconds + 20 * 60);\r\n\r\n   }\r\n};\r\n\r\n//==============================//\r\n// GymClockSpec class\r\n//==============================//\r\nexport class GymClockSpec implements IStreamable<GymClockSpec> {\r\n\r\n   private _durationEnum: GymClockDurationEnum;\r\n   private _musicEnum: GymClockMusicEnum;\r\n   private _musicUrl: string;\r\n\r\n   static readonly __type = \"GymClockSpec\";\r\n\r\n  /**\r\n   * Create a GymClockSpec object\r\n   * @param durationEnum - one of the enumeration objects (10, 15, 20, ...)\r\n   * @param musicEnum - one of the enumeration objects (Uptempo, Midtempo, none, ...)\r\n   * @param musicUrl - string URL to the music file. Can be null.\r\n   */\r\n   constructor(durationEnum: GymClockDurationEnum = GymClockDurationEnum.Ten,\r\n      musicEnum: GymClockMusicEnum = GymClockMusicEnum.None,\r\n      musicUrl: string = '') {\r\n\r\n      this._durationEnum = durationEnum;\r\n      this._musicEnum = musicEnum;\r\n      this._musicUrl = musicUrl;\r\n   }\r\n\r\n   /**\r\n   * set of 'getters' for private variables\r\n   */\r\n   get durationEnum(): GymClockDurationEnum {\r\n      return this._durationEnum;\r\n   }\r\n   get musicEnum(): GymClockMusicEnum {\r\n      return this._musicEnum;\r\n   }\r\n   get musicUrl(): string {\r\n      return this._musicUrl;\r\n   }\r\n   get type(): string {\r\n      return GymClockSpec.__type;\r\n   }\r\n\r\n  /**\r\n   * test for equality - checks all fields are the same. \r\n   * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n   * @param rhs - the object to compare this one to.  \r\n   */\r\n   equals (rhs: GymClockSpec) : boolean {\r\n\r\n      return (this._durationEnum === rhs._durationEnum\r\n         && this._musicEnum === rhs._musicEnum\r\n         && this._musicUrl === rhs._musicUrl);\r\n   };\r\n\r\n   /**\r\n * Method that serializes to JSON \r\n */\r\n   toJSON () : any {\r\n\r\n      return {\r\n         __type: GymClockSpec.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _durationEnum: this._durationEnum,\r\n            _musicEnum: this._musicEnum,\r\n            _musicUrl: this._musicUrl\r\n         }\r\n      };\r\n   };\r\n\r\n   /**\r\n    * Method that can deserialize JSON into an instance \r\n    * @param data - the JSON data to revive from \r\n    */\r\n   static revive(data: any): GymClockSpec {\r\n\r\n      // revive data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return GymClockSpec.reviveDb(data.attributes);\r\n\r\n      return GymClockSpec.reviveDb(data);\r\n   };\r\n\r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revive from \r\n   */\r\n   static reviveDb(data: any): GymClockSpec {\r\n\r\n     return new GymClockSpec(data._durationEnum, data._musicEnum, data._musicUrl);\r\n   };\r\n}\r\n\r\n\r\n//==============================//\r\n// GymClockAction class \r\n// Exists just to transport en enum of RPC with a type\r\n//==============================//\r\nexport class GymClockAction implements IStreamable<GymClockAction> {\r\n\r\n   private _actionEnum: GymClockActionEnum;\r\n\r\n   static readonly __type = \"GymClockAction\";\r\n\r\n   /**\r\n    * Create a GymClockAction object\r\n    */\r\n   constructor(actionEnum: GymClockActionEnum) {\r\n\r\n      this._actionEnum = actionEnum;\r\n   }\r\n\r\n   /**\r\n   * set of 'getters' for private variables\r\n   */\r\n   get actionEnum(): GymClockActionEnum {\r\n      return this._actionEnum;\r\n   }\r\n   get type(): string {\r\n      return GymClockAction.__type;\r\n   }\r\n\r\n   /**\r\n    * test for equality - checks all fields are the same. \r\n    * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n    * @param rhs - the object to compare this one to.  \r\n    */\r\n   equals(rhs: GymClockAction) : boolean {\r\n\r\n      return (this._actionEnum === rhs._actionEnum);\r\n   };\r\n\r\n\r\n   /**\r\n    * Method that serializes to JSON \r\n    */\r\n   toJSON () : any {\r\n\r\n      return {\r\n         __type: GymClockAction.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _actionEnum: this._actionEnum\r\n         }\r\n      };\r\n   };\r\n\r\n   /**\r\n    * Method that can deserialize JSON into an instance \r\n    * @param data - the JSON data to revive from \r\n    */\r\n   static revive(data: any): GymClockAction {\r\n\r\n      // revive data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return GymClockAction.reviveDb(data.attributes);\r\n\r\n      return GymClockAction.reviveDb(data);\r\n   };\r\n\r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revive from \r\n   */\r\n   static reviveDb(data: any): GymClockAction{\r\n\r\n      return new GymClockAction(data._actionEnum);\r\n   };\r\n}\r\n\r\n//==============================//\r\n// GymClockState class \r\n//==============================//\r\nexport class GymClockState implements IStreamable<GymClockState >  {\r\n\r\n   _stateEnum: GymClockStateEnum;\r\n   _secondsIn: number;\r\n\r\n   static readonly __type = \"GymClockState\";\r\n\r\n   /**\r\n    * Create a GymClockState object\r\n    */\r\n   constructor (stateEnum, secondsIn) {\r\n\r\n      this._stateEnum = stateEnum;\r\n      this._secondsIn = secondsIn;\r\n   }   \r\n\r\n\r\n   /**\r\n   * set of 'getters' for private variables\r\n   */\r\n   get stateEnum(): GymClockStateEnum {\r\n      return this._stateEnum;\r\n   }\r\n   get secondsIn(): number {\r\n      return this._secondsIn;\r\n   }\r\n   get type(): string {\r\n      return GymClockState.__type;\r\n   }\r\n\r\n   /**\r\n    * test for equality - checks all fields are the same. \r\n    * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n    * @param rhs - the object to compare this one to.  \r\n    */\r\n   equals(rhs: GymClockState): boolean {\r\n\r\n      return (this._stateEnum === rhs._stateEnum &&\r\n         this._secondsIn === rhs._secondsIn);\r\n   };\r\n\r\n\r\n   /**\r\n    * Method that serializes to JSON \r\n    */\r\n   toJSON () : any {\r\n\r\n      return {\r\n         __type: GymClockState.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _stateEnum: this._stateEnum,\r\n            _secondsIn: this._secondsIn\r\n         }\r\n      };\r\n   };\r\n\r\n   /**\r\n    * Method that can deserialize JSON into an instance \r\n    * @param data - the JSON data to revive from \r\n    */\r\n   static revive(data: any): GymClockState {\r\n\r\n      // revive data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return GymClockState.reviveDb(data.attributes);\r\n\r\n      return GymClockState.reviveDb(data);\r\n   };\r\n\r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revive from \r\n   */\r\n   static reviveDb(data: any): GymClockState {\r\n\r\n      return new GymClockState(data._stateEnum, data._secondsIn);\r\n   };\r\n}\r\n\r\n","/*jslint white: false, indent: 3, maxerr: 1000 */\r\n/*global exports*/\r\n/*! Copyright TXPCo, 2020, 2021 */\r\n\r\n//import { ServerLoggerWrap } from './LoggerServerWrap';\r\nimport { ClientLoggerWrap } from './LoggerClientWrap';\r\n\r\nexport enum LoggerType {\r\n   Server,\r\n   Client\r\n}\r\n\r\n\r\ninterface ILogger {\r\n   logError (component: string,\r\n      method: string,\r\n      message: string,\r\n      data: any\r\n   ) : void;\r\n\r\n   logInfo (component: string,\r\n      method: string,\r\n      message: string,\r\n      data: any\r\n   ) : void;\r\n}\r\n\r\nexport class LoggerFactory {\r\n   constructor() {\r\n   }\r\n\r\n   logger(loggerType: LoggerType): ILogger {\r\n      switch (loggerType) {\r\n         case LoggerType.Server:\r\n            return new ClientLogger();\r\n\r\n         case LoggerType.Client:\r\n            return new ClientLogger();;\r\n      }\r\n      \r\n   }\r\n}\r\n\r\n/*\r\nclass ServerLogger implements ILogger {\r\n\r\n   private logger: any;\r\n\r\n   constructor() {\r\n\r\n      // instantiate a new Winston Logger with the settings defined above\r\n      this.logger = new ServerLoggerWrap();\r\n   }\r\n\r\n   logError(component: string,\r\n      method: string,\r\n      message: string,\r\n      data: any\r\n   ) : void {\r\n      this.logger.logError (\r\n         component,\r\n         method,\r\n         message,\r\n         data ? JSON.stringify (data, null, 2) : \"\"\r\n      );\r\n   }\r\n\r\n   logInfo(component: string,\r\n      method: string,\r\n      message: string,\r\n      data: any\r\n   ) : void {\r\n      this.logger.logInfo (\r\n         component,\r\n         method,\r\n         message,\r\n         data ? JSON.stringify(data, null, 2) : \"\"\r\n      );\r\n   }\r\n}\r\n*/\r\n\r\nclass ClientLogger implements ILogger {\r\n\r\n   private logger: any;\r\n\r\n   constructor() {\r\n\r\n      // instantiate a new Winston Logger with the settings defined above\r\n      this.logger = new ClientLoggerWrap();\r\n   }\r\n\r\n   logError(component: string,\r\n      method: string,\r\n      message: string,\r\n      data: any\r\n   ): void {\r\n      this.logger.logError(\r\n         component,\r\n         method,\r\n         message,\r\n         data ? JSON.stringify(data, null, 2) : \"\"\r\n      );\r\n   }\r\n\r\n   logInfo(component: string,\r\n      method: string,\r\n      message: string,\r\n      data: any\r\n   ): void {\r\n      this.logger.logInfo(\r\n         component,\r\n         method,\r\n         message,\r\n         data ? JSON.stringify(data, null, 2) : \"\"\r\n      );\r\n   }\r\n}\r\n\r\nvar LoggerEntryPoints = {\r\n   LoggerFactory: LoggerFactory,\r\n   LoggerType: LoggerType\r\n};\r\n\r\n\r\n\r\n\r\n\r\n","/*jslint white: false, indent: 3, maxerr: 1000 */\r\n/*global exports*/\r\n/*! Copyright TXPCo, 2020, 2021 */\r\n\r\nvar logging = require('loglevel');\r\n\r\nlogging.setLevel(\"info\");\r\n\r\nexport class ClientLoggerWrap {\r\n\r\n   private logger: any;\r\n\r\n   constructor () {\r\n\r\n      // instantiate a new Winston Logger with the settings defined above\r\n      this.logger = logging;\r\n   }\r\n\r\n   logError (fromClass: string, fromMethod: string, info: string, objAsJSON: string) : void {\r\n      const msg = ' ' + fromClass + \".\" + fromMethod + \": \" + info + (objAsJSON ? objAsJSON : \"\");\r\n      this.logger.error('Error:' + msg);\r\n\r\n      //axios.post('/api/error', { params: { message: encodeURIComponent(msg) } })\r\n      //   .then((response) => {\r\n      //   });\r\n   }\r\n\r\n   logInfo(fromClass: string, fromMethod: string, info: string, objAsJSON: string) : void {\r\n      this.logger.info('Info: ' + fromClass + \".\" + fromMethod + \": \" + info + (objAsJSON ? objAsJSON : \"\"));\r\n   }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","/*! Copyright TXPCo, 2020, 2021 */\r\n\r\nimport { IStreamable } from './Streamable';\r\n\r\nexport class Person implements IStreamable<Person> {\r\n   private _id: any; \r\n   private _externalId : string;\r\n   private _name: string;\r\n   private _email: string;\r\n   private _thumbnailUrl: string;\r\n   private _lastAuthCode: string;\r\n\r\n   static readonly __type: string = \"Person\";\r\n\r\n/**\r\n * Create a Person object\r\n * @param _id - Mongo-DB assigned ID\r\n * @param externalId - ID assigned by external system (like facebook)\r\n * @param name - plain text user name\r\n * @param email - user email\r\n * @param thumbnailUrl - URL to thumbnail image\r\n * @param lastAuthCode - provided by underlying identity system when user logs in\r\n */\r\n   constructor(_id: any, externalId: string, name: string, email: string, thumbnailUrl: string, lastAuthCode:string) {\r\n      this._id = _id;\r\n      this._externalId = externalId;\r\n      this._name = name;\r\n      this._email = email;\r\n      this._thumbnailUrl = thumbnailUrl;\r\n      this._lastAuthCode = lastAuthCode;\r\n   }\r\n\r\n   /**\r\n   * set of 'getters' for private variables\r\n   */\r\n   get id(): any {\r\n      return this._id;\r\n   }\r\n   get externalId(): string {\r\n      return this._externalId;\r\n   }\r\n   get name(): string {\r\n      return this._name;\r\n   }\r\n   get email(): string {\r\n      return this._email;\r\n   }\r\n   get thumbnailUrl(): string {\r\n      return this._thumbnailUrl;\r\n   }\r\n   get lastAuthCode(): string {\r\n      return this._lastAuthCode;\r\n   }\r\n   get type(): string {\r\n      return Person.__type;\r\n   }\r\n\r\n   /**\r\n    * test for equality - checks all fields are the same. \r\n    * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n    * @param rhs - the object to compare this one to.  \r\n    */\r\n    equals (rhs: Person) : boolean {\r\n\r\n      return ((this._id === rhs._id) &&\r\n         (this._externalId === rhs._externalId) &&\r\n         (this._name === rhs._name) &&\r\n         (this._email === rhs._email) &&\r\n         (this._thumbnailUrl === rhs._thumbnailUrl) &&\r\n         (this._lastAuthCode === rhs._lastAuthCode));\r\n   };\r\n\r\n   /**\r\n    * Method that serializes to JSON \r\n    */\r\n   toJSON(): Object {\r\n\r\n      return {\r\n         __type: Person.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _id: this._id,\r\n            _externalId: this._externalId,\r\n            _name: this._name,\r\n            _email: this._email,\r\n            _thumbnailUrl: this._thumbnailUrl,\r\n            _lastAuthCode: this._lastAuthCode\r\n         }\r\n      };\r\n   };\r\n\r\n   /**\r\n    * Method that can deserialize JSON into an instance \r\n    * @param data - the JSON data to revove from \r\n    */\r\n   static revive(data: any): Person {\r\n\r\n      // revice data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return Person.reviveDb(data.attributes);\r\n      else\r\n         return Person.reviveDb(data);\r\n   };\r\n\r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revove from \r\n   */\r\n   static reviveDb(data: any) : Person {\r\n\r\n      return new Person (data._id,\r\n         data._externalId,\r\n         data._name,\r\n         data._email,\r\n         data._thumbnailUrl,\r\n         data._lastAuthCode);\r\n   };\r\n};\r\n\r\n","/*! Copyright TXPCo, 2020, 2021 */\r\n\r\n\r\n//==============================//\r\n// Queue class\r\n//==============================//\r\n\r\nexport class Queue<T> {\r\n\r\n      // initialise the queue and offset\r\n   queue: Array<T>;\r\n   offset: number; \r\n\r\n   /**\r\n    * Creates a Queue\r\n    */\r\n   constructor() {\r\n      this.offset = 0\r\n      this.queue = new Array<T>();\r\n   }\r\n\r\n   // Returns the length of the queue.\r\n   getLength () : number {\r\n      return (this.queue.length - this.offset);\r\n   }\r\n\r\n   // Returns true if the queue is empty, and false otherwise.\r\n   isEmpty () : boolean {\r\n      return (this.queue.length == 0);\r\n   }\r\n\r\n   /* Enqueues the specified item. The parameter is:\r\n    *\r\n    * item - the item to enqueue\r\n    */\r\n   enqueue (item: T) {\r\n      this.queue.push(item);\r\n   }\r\n\r\n   /* Dequeues an item and returns it. If the queue is empty, the value\r\n    * 'undefined' is returned.\r\n    */\r\n   dequeue (): T | undefined {\r\n\r\n      // if the queue is empty, return immediately\r\n      if (this.queue.length == 0) return undefined;\r\n\r\n      // store the item at the front of the queue\r\n      let item = this.queue[this.offset];\r\n\r\n      // increment the offset and remove the free space if necessary\r\n      if (++(this.offset) * 2 >= this.queue.length) {\r\n         this.queue = this.queue.slice(this.offset);\r\n         this.offset = 0;\r\n      }\r\n\r\n      // return the dequeued item\r\n      return item;\r\n\r\n   }\r\n\r\n   /* Returns the item at the front of the queue (without dequeuing it). If the\r\n    * queue is empty then undefined is returned.\r\n    */\r\n   peek(): T | undefined {\r\n      return (this.queue.length > 0 ? this.queue[this.offset] : undefined);\r\n   }\r\n}\r\n\r\n// Convencience classes for calls from plain javascript\r\nexport class QueueString extends Queue<string> {\r\n   constructor() {\r\n      super();\r\n   }\r\n}\r\n\r\nexport class QueueNumber extends Queue<number> {\r\n   constructor() {\r\n      super();\r\n   }\r\n}\r\n\r\nexport class QueueAny extends Queue<any> {\r\n   constructor() {\r\n      super();\r\n   }\r\n}","/*jslint white: false, indent: 3, maxerr: 1000 */\r\n/*global Enum*/\r\n/*global exports*/\r\n/*! Copyright TXPCo, 2020, 2021 */\r\n\r\nimport { CallParticipation, CallOffer, CallAnswer, CallIceCandidate, CallLeaderResolve, CallKeepAlive } from './Call';\r\nimport { TypeRegistry } from './Types';\r\n\r\nimport { IStreamable } from './Streamable';\r\n\r\n//==============================//\r\n// SignalMessage class\r\n//==============================//\r\nexport class SignalMessage implements IStreamable<SignalMessage>  {\r\n\r\n   private _id: any;\r\n   private _facilityId : string;\r\n   private _sessionId: string;\r\n   private _sessionSubId: string;\r\n   private _sequenceNo: number;\r\n   private _data: any;\r\n\r\n   static readonly __type = \"SignalMessage\";\r\n\r\n  /**\r\n   * Create a SignalMessage object \r\n   * @param _id - Mongo-DB assigned ID\r\n   * @param facilityId - ID for the facility hosting the call*\r\n   * @param sessionId - iD for the call session (in case same person joins > once)\r\n   * @param sessionSubId - iD for the call session (in case same person joins > once from same browser)\r\n   * @param sequenceNo - message sequence number, climbs nomintonicaly up from 0\r\n   * @param data - data as an object. This is transformed to and from JSON for transport, must be registered with Type infrastructure\r\n   */\r\n   constructor (_id, facilityId, sessionId, sessionSubId, sequenceNo, data) {\r\n\r\n      this._id = _id;\r\n      this._facilityId = facilityId;\r\n      this._sessionId = sessionId;\r\n      this._sessionSubId = sessionSubId;\r\n      this._sequenceNo = sequenceNo;\r\n      this._data = data;\r\n   }\r\n   \r\n   /**\r\n* set of 'getters' for private variables\r\n*/\r\n   get id(): any {\r\n      return this._id;\r\n   }\r\n   get facilityId(): string {\r\n      return this._facilityId;\r\n   }\r\n   get sessionId(): string {\r\n      return this._sessionId;\r\n   }\r\n   get sessionSubId(): string {\r\n      return this._sessionSubId;\r\n   }\r\n   get sequenceNo(): number {\r\n      return this._sequenceNo;\r\n   }\r\n   get data(): any {\r\n      return this._data;\r\n   }\r\n   get type(): string {\r\n      return SignalMessage.__type;\r\n   }\r\n\r\n  /**\r\n   * test for equality - checks all fields are the same. \r\n   * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n   * @param rhs - the object to compare this one to.  \r\n   */\r\n   equals(rhs: SignalMessage) : boolean {\r\n\r\n      return (this._id === rhs._id &&\r\n         (this._facilityId === rhs._facilityId) &&\r\n         (this._sessionId === rhs._sessionId) &&\r\n         (this._sessionSubId === rhs._sessionSubId) &&\r\n         (this._sequenceNo === rhs._sequenceNo) &&\r\n         this._data.equals (rhs._data)); \r\n   };\r\n\r\n   /**\r\n    * Method that serializes to JSON \r\n    */\r\n   toJSON () : any {\r\n\r\n      return {\r\n         __type: SignalMessage.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _id: this._id,\r\n            _facilityId: this._facilityId,\r\n            _sessionId: this._sessionId,\r\n            _sessionSubId: this._sessionSubId,\r\n            _sequenceNo: this._sequenceNo,\r\n            _data: JSON.stringify (this._data)\r\n         }\r\n      };\r\n   };\r\n\r\n  /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revove from \r\n   */\r\n   static revive(data: any): SignalMessage {\r\n      \r\n      // revive data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return SignalMessage.reviveDb(data.attributes);\r\n      else\r\n         return SignalMessage.reviveDb(data);\r\n   };\r\n   \r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revove from \r\n   */\r\n   static reviveDb(data: any): SignalMessage {\r\n\r\n      var types = new TypeRegistry();\r\n\r\n      return new SignalMessage(data._id,\r\n                               data._facilityId,\r\n                               data._sessionId,\r\n                               data._sessionSubId,\r\n                               data._sequenceNo,\r\n                               types.reviveFromJSON(data._data));\r\n   };\r\n\r\n   /**\r\n    * Used to change the payload to JSON before storage\r\n    * @param signalMessageIn - the object to transform\r\n    */\r\n   static toStored(signalMessageIn: SignalMessage): SignalMessage {\r\n      return new SignalMessage(signalMessageIn._id,\r\n         signalMessageIn._facilityId,\r\n         signalMessageIn._sessionId,\r\n         signalMessageIn._sessionSubId,\r\n         signalMessageIn._sequenceNo,\r\n         JSON.stringify(signalMessageIn._data));\r\n   }\r\n\r\n   /**\r\n    * Used to change the payload to JSON after storage\r\n    * @param signalMessageIn - the object to transform\r\n    */\r\n   static fromStored(signalMessageIn: SignalMessage): SignalMessage {\r\n      var types = new TypeRegistry();\r\n\r\n      return new SignalMessage(signalMessageIn._id,\r\n         signalMessageIn._facilityId,\r\n         signalMessageIn._sessionId,\r\n         signalMessageIn._sessionSubId,\r\n         signalMessageIn._sequenceNo,\r\n         types.reviveFromJSON(signalMessageIn._data));\r\n   }\r\n}\r\n","\r\n/*! Copyright TXPCo, 2020, 2021 */\r\nimport { Person } from './Person';\r\nimport { Facility } from './Facility';\r\nimport { CallParticipation, CallOffer, CallAnswer, CallIceCandidate, CallLeaderResolve, CallKeepAlive } from './Call'\r\nimport { SignalMessage } from './Signal';\r\nimport { UserFacilities } from './UserFacilities';\r\nimport { Whiteboard, WhiteboardElement } from './Whiteboard';\r\nimport { GymClockSpec, GymClockAction, GymClockState } from './GymClock'\r\n\r\n//==============================//\r\n// TypeRegistry class\r\n//==============================//\r\nexport class TypeRegistry {\r\n\r\n   private _types: any;\r\n\r\n   /**\r\n    * Creates a TypeRegistry for use in streaming objects to and from JSON\r\n    */\r\n   constructor() {\r\n\r\n      // Registry of types\r\n      this._types = {};\r\n      this._types.Person = Person;\r\n      this._types.Facility = Facility;\r\n      this._types.CallParticipation = CallParticipation;\r\n      this._types.CallOffer = CallOffer,\r\n      this._types.CallAnswer = CallAnswer;\r\n      this._types.CallIceCandidate = CallIceCandidate;\r\n      this._types.CallLeaderResolve = CallLeaderResolve;\r\n      this._types.CallKeepAlive = CallKeepAlive;\r\n      this._types.SignalMessage = SignalMessage;\r\n      this._types.UserFacilities = UserFacilities;\r\n      this._types.Whiteboard = Whiteboard;\r\n      this._types.WhiteboardElement = WhiteboardElement;\r\n      this._types.GymClockSpec = GymClockSpec;\r\n      this._types.GymClockAction = GymClockAction;\r\n      this._types.GymClockState = GymClockState;\r\n\r\n   }\r\n\r\n   isObjectKey(key: string): boolean {\r\n      let keyNum = Number(key);\r\n      return key === '' || (!isNaN(keyNum - 0));\r\n   };\r\n\r\n   /**\r\n     * Looks up a type name in JSON and returns a constructed object if there is a match\r\n     * @param jsonString - the test to parse for a class \r\n     */\r\n   reviveFromJSON(jsonString: string) : any {\r\n\r\n      var registry = this;\r\n\r\n      return JSON.parse(jsonString, function (key, value) {\r\n         if (registry.isObjectKey(key) && value.hasOwnProperty('__type'))\r\n            return registry._types[value.__type].revive(value);\r\n         else\r\n            return this[key];\r\n      });\r\n   };\r\n}\r\n\r\n\r\n\r\n","/*jslint white: false, indent: 3, maxerr: 1000 */\r\n/*global Enum*/\r\n/*global exports*/\r\n/*! Copyright TXPCo, 2020, 2021 */\r\n\r\nimport { IStreamable } from './Streamable';\r\n\r\nimport { Person } from './Person';\r\nimport { Facility } from './Facility';\r\nimport { isEqual } from './Equals';\r\n\r\n//==============================//\r\n// UserFacilities class\r\n//==============================//\r\nexport class UserFacilities implements IStreamable<UserFacilities> {\r\n\r\n   private _sessionId: string;\r\n   private _person: Person;\r\n   private _currentFacility : Facility;\r\n   private _facilities: Array<Facility>;\r\n\r\n   static readonly __type = \"UserFacilities\";\r\n\r\n  /**\r\n   * Create a HomePageData object \r\n   * @param sessionId - session ID - is sent back to the client, allows client to restart interrupted comms as long as within TTL\r\n   * @param person - object for current user\r\n   * @param currentFacility - the current facility where the user is logged in\r\n   * @param facilities - array of all facilities where the user has a role\r\n   *\r\n   */\r\n   constructor(sessionId, person, currentFacility, facilities: Array<Facility> = new Array<Facility>()) {\r\n\r\n      this._sessionId = sessionId;\r\n      this._person = person;\r\n      this._currentFacility = currentFacility;\r\n      this._facilities = facilities;\r\n   }\r\n\r\n   /**\r\n   * set of 'getters' for private variables\r\n   */\r\n   get sessionId(): any {\r\n      return this._sessionId;\r\n   }\r\n   get person(): Person {\r\n      return this._person;\r\n   }\r\n   get currentFacility(): Facility {\r\n      return this._currentFacility;\r\n   }\r\n   get facilities(): Array<Facility> {\r\n      return this._facilities;\r\n   }\r\n   get type(): string {\r\n      return UserFacilities.__type;\r\n   }\r\n\r\n  /**\r\n   * test for equality - checks all fields are the same. \r\n   * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n   * @param rhs - the object to compare this one to.  \r\n   */\r\n   equals(rhs: UserFacilities): boolean {\r\n\r\n      return (this._sessionId === rhs._sessionId &&\r\n         this._person.equals(rhs._person) &&\r\n         this._currentFacility.equals (rhs._currentFacility) &&\r\n         isEqual(this._facilities, rhs._facilities)); \r\n   };\r\n\r\n   /**\r\n    * Method that serializes to JSON \r\n    */\r\n   toJSON (): any {\r\n\r\n      return {\r\n         __type: UserFacilities.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _sessionId: this._sessionId,\r\n            _person: this._person,\r\n            _currentFacility: this._currentFacility,\r\n            _facilities: this._facilities \r\n         }\r\n      };\r\n   };\r\n\r\n  /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revove from \r\n   */\r\n   static revive(data: any): UserFacilities {\r\n      \r\n      // revive data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return UserFacilities.reviveDb(data.attributes);\r\n      else\r\n         return UserFacilities.reviveDb(data);\r\n   };\r\n   \r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revove from \r\n   */\r\n   static reviveDb(data: any): UserFacilities {\r\n\r\n      let facilities = new Array<Facility>();\r\n\r\n      if (data._facilities) {\r\n         facilities.length = data._facilities.length;\r\n         for (var i = 0; i < data._facilities.length; i++) {\r\n            facilities[i] = Facility.revive(data._facilities[i]);\r\n         }\r\n      }\r\n\r\n      return new UserFacilities(data._sessionId,\r\n         Person.revive(data._person),\r\n         data._currentFacility ? Facility.revive(data._currentFacility)\r\n            : new Facility(null, \"\", 'Unknown', 'building-black128x128.png', \"(No homepage)\"),\r\n         facilities);\r\n   }\r\n}\r\n\r\n","/*jslint white: false, indent: 3, maxerr: 1000 */\r\n/*global Enum*/\r\n/*global exports*/\r\n/*! Copyright TXPCo, 2020, 2021 */\r\n\r\nimport { isEqual } from './Equals';\r\nimport { IStreamable } from './Streamable';\r\n\r\n//==============================//\r\n// Whiteboard class\r\n//==============================//\r\nexport class Whiteboard implements IStreamable<Whiteboard> {\r\n\r\n   private _workout: WhiteboardElement;\r\n   private _results: WhiteboardElement;\r\n\r\n   static readonly __type = \"Whiteboard\";\r\n\r\n  /**\r\n   * Create a Whiteboard object\r\n   * @param workout - text description to display for the workout\r\n   * @param results - text description to display for the results\r\n   */\r\n   constructor (workout, results) {\r\n      \r\n      this._workout = workout;\r\n      this._results = results;\r\n   }\r\n\r\n   /**\r\n   * set of 'getters' for private variables\r\n   */\r\n   get workout(): WhiteboardElement {\r\n      return this._workout;\r\n   }\r\n   get results(): WhiteboardElement {\r\n      return this._results;\r\n   }\r\n   get type(): string {\r\n      return Whiteboard.__type;\r\n   }\r\n\r\n  /**\r\n   * test for equality - checks all fields are the same. \r\n   * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n   * @param rhs - the object to compare this one to.  \r\n   */\r\n   equals(rhs: Whiteboard) : boolean {\r\n\r\n      return (\r\n         (this._workout.equals(rhs._workout)) &&\r\n         (this._results.equals(rhs._results)));\r\n   };\r\n\r\n   /**\r\n    * Method that serializes to JSON \r\n    */\r\n   toJSON () : any {\r\n\r\n      return {\r\n         __type: Whiteboard.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _workout: this._workout,\r\n            _results: this._results\r\n         }\r\n      };\r\n   }\r\n\r\n  /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revove from \r\n   */\r\n   static revive(data: any): Whiteboard {\r\n      \r\n      // revice data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return Whiteboard.reviveDb(data.attributes);\r\n      else\r\n         return Whiteboard.reviveDb(data);\r\n   }\r\n   \r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revove from \r\n   */\r\n   static reviveDb(data: any) : Whiteboard {\r\n      return new Whiteboard (WhiteboardElement.revive(data._workout),\r\n                             WhiteboardElement.revive(data._results));      \r\n   }\r\n}\r\n\r\n//==============================//\r\n// WhiteboardElement class\r\n//==============================//\r\nexport class WhiteboardElement implements IStreamable<WhiteboardElement> {\r\n   \"use strict\";\r\n\r\n   private _rows: number;\r\n   private _text: string;\r\n\r\n   static readonly __type = \"WhiteboardElement\";\r\n\r\n   /**\r\n    * Create a WhiteboardWorkout object\r\n     * @param rows - the number of rows (to set visible field size).\r\n     * @param text - the text to display.\r\n    */\r\n   constructor (rows: number, text: string) {\r\n\r\n      this._rows = rows;\r\n      this._text = text;\r\n   }   \r\n\r\n   /**\r\n   * set of 'getters' for private variables\r\n   */\r\n   get rows(): number {\r\n      return this._rows;\r\n   }\r\n   get text(): string {\r\n      return this._text;\r\n   }\r\n   get type(): string {\r\n      return WhiteboardElement.__type;\r\n   }\r\n\r\n   /**\r\n    * test for equality - checks all fields are the same. \r\n    * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n    * @param rhs - the object to compare this one to.  \r\n    */\r\n   equals(rhs: WhiteboardElement) : boolean {\r\n\r\n      return (\r\n         (this._rows === rhs._rows) &&\r\n         (this._text === rhs._text));\r\n   };\r\n\r\n   /**\r\n * test for equality - checks all fields are the same. \r\n * Uses field values, not identity bcs if objects are streamed to/from JSON, field identities will be different. \r\n * @param rhs - the object to compare this one to.  \r\n */\r\n   assign(rhs: WhiteboardElement): void {\r\n      this._rows = rhs._rows;\r\n      this._text = rhs._text;\r\n   };\r\n\r\n\r\n   /**\r\n    * Method that serializes to JSON \r\n    */\r\n   toJSON () : any {\r\n\r\n      return {\r\n         __type: WhiteboardElement.__type,\r\n         // write out as id and attributes per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n         attributes: {\r\n            _rows: this._rows,\r\n            _text: this._text\r\n         }\r\n      };\r\n   };\r\n\r\n   /**\r\n    * Method that can deserialize JSON into an instance \r\n    * @param data - the JSON data to revove from \r\n    */\r\n   static revive(data: any) : WhiteboardElement {\r\n\r\n      // revice data from 'attributes' per JSON API spec http://jsonapi.org/format/#document-resource-object-attributes\r\n      if (data.attributes)\r\n         return WhiteboardElement.reviveDb(data.attributes);\r\n      else\r\n         return WhiteboardElement.reviveDb(data);\r\n   }\r\n\r\n   /**\r\n   * Method that can deserialize JSON into an instance \r\n   * @param data - the JSON data to revove from \r\n   */\r\n   static reviveDb(data: any) : WhiteboardElement {\r\n\r\n      return new WhiteboardElement(data._rows, data._text);\r\n   }\r\n}\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/*! Copyright TXPCo, 2020, 2021 */\r\n\r\nimport { LoggerFactory, LoggerType } from './Logger';\r\nimport { Person } from './Person';\r\nimport { Facility } from './Facility';\r\nimport { TypeRegistry } from './Types';\r\nimport { DateWithDays } from './Dates'\r\nimport { Queue, QueueString, QueueNumber, QueueAny } from './Queue'\r\nimport { CallParticipation, CallOffer, CallAnswer, CallIceCandidate, CallLeaderResolve, CallKeepAlive } from './Call'\r\nimport { SignalMessage } from './Signal';\r\nimport { UserFacilities } from './UserFacilities';\r\nimport { Whiteboard, WhiteboardElement } from './Whiteboard';\r\nimport { GymClockDurationEnum, GymClockMusicEnum, GymClockStateEnum, GymClockActionEnum, GymClockSpec, GymClockAction, GymClockState } from './GymClock'\r\n\r\nvar EntryPoints = {\r\n   LoggerFactory: LoggerFactory,\r\n   LoggerType: LoggerType,\r\n   TypeRegistry: TypeRegistry,\r\n   Person: Person,\r\n   Facility: Facility,\r\n   DateWithDays: DateWithDays,\r\n   Queue: Queue,\r\n   QueueString: QueueString,\r\n   QueueNumber: QueueNumber,\r\n   QueueAny: QueueAny,\r\n   CallParticipation: CallParticipation,\r\n   CallOffer: CallOffer,\r\n   CallAnswer: CallAnswer,\r\n   CallIceCandidate: CallIceCandidate,\r\n   CallLeaderResolve: CallLeaderResolve,\r\n   CallKeepAlive: CallKeepAlive,\r\n   SignalMessage: SignalMessage,\r\n   UserFacilities: UserFacilities,\r\n   Whiteboard: Whiteboard,\r\n   WhiteboardElement: WhiteboardElement,\r\n   GymClockDurationEnum: GymClockDurationEnum,\r\n   GymClockMusicEnum: GymClockMusicEnum,\r\n   GymClockStateEnum: GymClockStateEnum,\r\n   GymClockActionEnum: GymClockActionEnum,\r\n   GymClockSpec: GymClockSpec,\r\n   GymClockAction: GymClockAction,\r\n   GymClockState: GymClockState\r\n\r\n};\r\n\r\nexport default EntryPoints;\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}